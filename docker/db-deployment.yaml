apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.27.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: db
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: db
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.27.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: db
    spec:
      containers:
        - args:
            - postgres
            - -c
            - config_file=/etc/postgresql/postgresql.conf
            - -c
            - log_min_messages=fatal
          env:
            - name: PGDATABASE
            - name: PGPASSWORD
            - name: PGPORT
            - name: POSTGRES_DB
            - name: POSTGRES_HOST
              value: /var/run/postgresql
            - name: POSTGRES_PASSWORD
            - name: POSTGRES_PORT
          image: supabase/postgres:14.1.0.89
          livenessProbe:
            exec:
              command:
                - pg_isready -U postgres -h localhost
            failureThreshold: 10
            periodSeconds: 5
            timeoutSeconds: 5
          name: supabase-db
          ports:
            - containerPort: 5432
          resources: {}
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d/realtime.sql
              name: db-claim0
            - mountPath: /docker-entrypoint-initdb.d/roles.sql
              name: db-claim1
            - mountPath: /var/lib/postgresql/data
              name: db-claim2
      restartPolicy: Always
      volumes:
        - name: db-claim0
          persistentVolumeClaim:
            claimName: db-claim0
        - name: db-claim1
          persistentVolumeClaim:
            claimName: db-claim1
        - name: db-claim2
          persistentVolumeClaim:
            claimName: db-claim2
status: {}
